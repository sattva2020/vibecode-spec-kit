{
  "timestamp": 1759609904.0773542,
  "phase": "Phase 2 - Integration Testing",
  "summary": {
    "total_tests": 6,
    "passed_tests": 1,
    "failed_tests": 5,
    "success_rate": 16.666666666666664
  },
  "test_results": {
    "unit_tests": {
      "success": true,
      "returncode": 0,
      "stdout": "============================= test session starts =============================\nplatform win32 -- Python 3.12.8, pytest-7.4.3, pluggy-1.6.0 -- C:\\Users\\Admin\\AppData\\Local\\Programs\\Python\\Python312\\python.exe\ncachedir: .pytest_cache\nrootdir: E:\\My\\vscode-memory-bank\\intelligent-n8n-system\nconfigfile: pytest.ini\nplugins: anyio-3.7.1, asyncio-0.21.1, cov-4.1.0, mock-3.15.1\nasyncio: mode=Mode.STRICT\ncollecting ... collected 44 items / 43 deselected / 1 selected\n\ntests/test_basic.py::test_unit_marker PASSED                             [100%]\n\n============================== warnings summary ===============================\nC:\\Users\\Admin\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pydantic\\fields.py:1093: 36 warnings\n  C:\\Users\\Admin\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pydantic\\fields.py:1093: PydanticDeprecatedSince20: Using extra keyword arguments on `Field` is deprecated and will be removed. Use `json_schema_extra` instead. (Extra keys: 'env'). Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    warn(\n\nC:\\Users\\Admin\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pydantic\\_internal\\_config.py:323\n  C:\\Users\\Admin\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pydantic\\_internal\\_config.py:323: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    warnings.warn(DEPRECATION_MESSAGE, DeprecationWarning)\n\ntests\\test_performance.py:16\n  E:\\My\\vscode-memory-bank\\intelligent-n8n-system\\tests\\test_performance.py:16: PytestUnknownMarkWarning: Unknown pytest.mark.performance - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.performance\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n================ 1 passed, 43 deselected, 38 warnings in 0.57s ================\n",
      "stderr": ""
    },
    "integration_tests": {
      "success": false,
      "returncode": 1,
      "stdout": "============================= test session starts =============================\nplatform win32 -- Python 3.12.8, pytest-7.4.3, pluggy-1.6.0 -- C:\\Users\\Admin\\AppData\\Local\\Programs\\Python\\Python312\\python.exe\ncachedir: .pytest_cache\nrootdir: E:\\My\\vscode-memory-bank\\intelligent-n8n-system\nconfigfile: pytest.ini\nplugins: anyio-3.7.1, asyncio-0.21.1, cov-4.1.0, mock-3.15.1\nasyncio: mode=Mode.STRICT\ncollecting ... collected 13 items\n\ntests/test_integration_pipeline.py::TestPipelineIntegration::test_complete_pipeline_execution PASSED [  7%]\ntests/test_integration_pipeline.py::TestPipelineIntegration::test_pipeline_error_handling PASSED [ 15%]\ntests/test_integration_pipeline.py::TestPipelineIntegration::test_pipeline_retry_mechanism PASSED [ 23%]\ntests/test_integration_pipeline.py::TestPipelineIntegration::test_pipeline_status_monitoring FAILED [ 30%]\ntests/test_integration_pipeline.py::TestPipelineIntegration::test_pipeline_with_complex_project FAILED [ 38%]\ntests/test_integration_services.py::TestServiceIntegration::test_project_analyzer_integration FAILED [ 46%]\ntests/test_integration_services.py::TestServiceIntegration::test_lightrag_service_integration FAILED [ 53%]\ntests/test_integration_services.py::TestServiceIntegration::test_decision_engine_integration PASSED [ 61%]\ntests/test_integration_services.py::TestServiceIntegration::test_workflow_generator_integration PASSED [ 69%]\ntests/test_integration_services.py::TestServiceIntegration::test_n8n_api_integration SKIPPED [ 76%]\ntests/test_integration_services.py::TestServiceIntegration::test_supabase_integration SKIPPED [ 84%]\ntests/test_integration_services.py::TestServiceIntegration::test_ollama_integration SKIPPED [ 92%]\ntests/test_integration_services.py::TestServiceIntegration::test_end_to_end_service_communication FAILED [100%]\n\n================================== FAILURES ===================================\n___________ TestPipelineIntegration.test_pipeline_status_monitoring ___________\ntests\\test_integration_pipeline.py:170: in test_pipeline_status_monitoring\n    assert status is not None\nE   assert None is not None\n_________ TestPipelineIntegration.test_pipeline_with_complex_project __________\ntests\\test_integration_pipeline.py:311: in test_pipeline_with_complex_project\n    assert project_analysis is not None\nE   assert None is not None\n__________ TestServiceIntegration.test_project_analyzer_integration ___________\ntests\\test_integration_services.py:44: in test_project_analyzer_integration\n    assert analysis.architecture_type == \"api\"\nE   AssertionError: assert 'microservices' == 'api'\nE     - api\nE     + microservices\n__________ TestServiceIntegration.test_lightrag_service_integration ___________\ntests\\test_integration_services.py:82: in test_lightrag_service_integration\n    assert \"nodes\" in knowledge_result\nE   TypeError: argument of type 'KnowledgeQueryResult' is not iterable\n------------------------------ Captured log call ------------------------------\nERROR    src.knowledge.lightrag_service:lightrag_service.py:255 Failed to query relevant knowledge: '>' not supported between instances of 'MagicMock' and 'float'\n________ TestServiceIntegration.test_end_to_end_service_communication _________\ntests\\test_integration_services.py:353: in test_end_to_end_service_communication\n    assert knowledge_data.confidence > 0.0\nE   AttributeError: 'dict' object has no attribute 'confidence'\n============================== warnings summary ===============================\nC:\\Users\\Admin\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pydantic\\fields.py:1093: 36 warnings\n  C:\\Users\\Admin\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pydantic\\fields.py:1093: PydanticDeprecatedSince20: Using extra keyword arguments on `Field` is deprecated and will be removed. Use `json_schema_extra` instead. (Extra keys: 'env'). Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    warn(\n\nC:\\Users\\Admin\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pydantic\\_internal\\_config.py:323\n  C:\\Users\\Admin\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pydantic\\_internal\\_config.py:323: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    warnings.warn(DEPRECATION_MESSAGE, DeprecationWarning)\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ===========================\nFAILED tests/test_integration_pipeline.py::TestPipelineIntegration::test_pipeline_status_monitoring\nFAILED tests/test_integration_pipeline.py::TestPipelineIntegration::test_pipeline_with_complex_project\nFAILED tests/test_integration_services.py::TestServiceIntegration::test_project_analyzer_integration\nFAILED tests/test_integration_services.py::TestServiceIntegration::test_lightrag_service_integration\nFAILED tests/test_integration_services.py::TestServiceIntegration::test_end_to_end_service_communication\n============ 5 failed, 5 passed, 3 skipped, 37 warnings in 15.68s =============\n",
      "stderr": ""
    },
    "n8n_integration": {
      "success": false,
      "returncode": 1,
      "stdout": "============================= test session starts =============================\nplatform win32 -- Python 3.12.8, pytest-7.4.3, pluggy-1.6.0 -- C:\\Users\\Admin\\AppData\\Local\\Programs\\Python\\Python312\\python.exe\ncachedir: .pytest_cache\nrootdir: E:\\My\\vscode-memory-bank\\intelligent-n8n-system\nconfigfile: pytest.ini\nplugins: anyio-3.7.1, asyncio-0.21.1, cov-4.1.0, mock-3.15.1\nasyncio: mode=Mode.STRICT\ncollecting ... collected 7 items\n\ntests/test_n8n_integration.py::TestN8nIntegration::test_n8n_authentication SKIPPED [ 14%]\ntests/test_n8n_integration.py::TestN8nIntegration::test_n8n_workflow_crud_operations FAILED [ 28%]\ntests/test_n8n_integration.py::TestN8nIntegration::test_n8n_workflow_execution PASSED [ 42%]\ntests/test_n8n_integration.py::TestN8nIntegration::test_n8n_webhook_operations PASSED [ 57%]\ntests/test_n8n_integration.py::TestN8nIntegration::test_n8n_credential_management PASSED [ 71%]\ntests/test_n8n_integration.py::TestN8nIntegration::test_n8n_error_handling PASSED [ 85%]\ntests/test_n8n_integration.py::TestN8nIntegration::test_n8n_workflow_validation PASSED [100%]\n\n================================== FAILURES ===================================\n____________ TestN8nIntegration.test_n8n_workflow_crud_operations _____________\ntests\\test_n8n_integration.py:134: in test_n8n_workflow_crud_operations\n    assert workflow[\"id\"] == \"test-workflow-123\"\nE   TypeError: list indices must be integers or slices, not str\n============================== warnings summary ===============================\nC:\\Users\\Admin\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pydantic\\fields.py:1093: 36 warnings\n  C:\\Users\\Admin\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pydantic\\fields.py:1093: PydanticDeprecatedSince20: Using extra keyword arguments on `Field` is deprecated and will be removed. Use `json_schema_extra` instead. (Extra keys: 'env'). Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    warn(\n\nC:\\Users\\Admin\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pydantic\\_internal\\_config.py:323\n  C:\\Users\\Admin\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pydantic\\_internal\\_config.py:323: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    warnings.warn(DEPRECATION_MESSAGE, DeprecationWarning)\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ===========================\nFAILED tests/test_n8n_integration.py::TestN8nIntegration::test_n8n_workflow_crud_operations\n============= 1 failed, 5 passed, 1 skipped, 37 warnings in 5.80s =============\n",
      "stderr": ""
    },
    "model_training": {
      "success": false,
      "returncode": 1,
      "stdout": "============================= test session starts =============================\nplatform win32 -- Python 3.12.8, pytest-7.4.3, pluggy-1.6.0 -- C:\\Users\\Admin\\AppData\\Local\\Programs\\Python\\Python312\\python.exe\ncachedir: .pytest_cache\nrootdir: E:\\My\\vscode-memory-bank\\intelligent-n8n-system\nconfigfile: pytest.ini\nplugins: anyio-3.7.1, asyncio-0.21.1, cov-4.1.0, mock-3.15.1\nasyncio: mode=Mode.STRICT\ncollecting ... collected 9 items\n\ntests/test_model_training.py::TestModelTraining::test_training_data_preparation PASSED [ 11%]\ntests/test_model_training.py::TestModelTraining::test_model_training_pipeline FAILED [ 22%]\ntests/test_model_training.py::TestModelTraining::test_model_evaluation PASSED [ 33%]\ntests/test_model_training.py::TestModelTraining::test_model_persistence FAILED [ 44%]\ntests/test_model_training.py::TestModelTraining::test_hyperparameter_tuning PASSED [ 55%]\ntests/test_model_training.py::TestModelTraining::test_incremental_learning FAILED [ 66%]\ntests/test_model_training.py::TestModelTraining::test_model_ensemble_training PASSED [ 77%]\ntests/test_model_training.py::TestModelTraining::test_training_monitoring FAILED [ 88%]\ntests/test_model_training.py::TestModelTraining::test_model_performance_comparison PASSED [100%]\n\n================================== FAILURES ===================================\n_______________ TestModelTraining.test_model_training_pipeline ________________\ntests\\test_model_training.py:180: in test_model_training_pipeline\n    assert \"accuracy\" in result\nE   TypeError: argument of type 'TrainingResult' is not iterable\n__________________ TestModelTraining.test_model_persistence ___________________\ntests\\test_model_training.py:243: in test_model_persistence\n    assert Path(path).exists()\nE   AssertionError: assert False\nE    +  where False = <bound method Path.exists of WindowsPath('models/random_forest_model.pkl')>()\nE    +    where <bound method Path.exists of WindowsPath('models/random_forest_model.pkl')> = WindowsPath('models/random_forest_model.pkl').exists\nE    +      where WindowsPath('models/random_forest_model.pkl') = Path('./models/random_forest_model.pkl')\n_________________ TestModelTraining.test_incremental_learning _________________\ntests\\test_model_training.py:324: in test_incremental_learning\n    assert \"test_model\" in updated_results\nE   AssertionError: assert 'test_model' in {'neural_network': {'learning_time': 0.8267673551148527, 'new_samples': 1, 'updated_accuracy': 0.92628939644254}, 'random_forest': {'learning_time': 1.7169425797783127, 'new_samples': 1, 'updated_accuracy': 0.8927183340355984}, 'svm': {'learning_time': 0.847541416698504, 'new_samples': 1, 'updated_accuracy': 0.869711657267916}}\n_________________ TestModelTraining.test_training_monitoring __________________\ntests\\test_model_training.py:379: in test_training_monitoring\n    assert mock_log.called\nE   AssertionError: assert False\nE    +  where False = <AsyncMock name='_log_training_metrics' id='2719044137760'>.called\n============================== warnings summary ===============================\nC:\\Users\\Admin\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pydantic\\fields.py:1093: 36 warnings\n  C:\\Users\\Admin\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pydantic\\fields.py:1093: PydanticDeprecatedSince20: Using extra keyword arguments on `Field` is deprecated and will be removed. Use `json_schema_extra` instead. (Extra keys: 'env'). Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    warn(\n\nC:\\Users\\Admin\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pydantic\\_internal\\_config.py:323\n  C:\\Users\\Admin\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pydantic\\_internal\\_config.py:323: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    warnings.warn(DEPRECATION_MESSAGE, DeprecationWarning)\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ===========================\nFAILED tests/test_model_training.py::TestModelTraining::test_model_training_pipeline\nFAILED tests/test_model_training.py::TestModelTraining::test_model_persistence\nFAILED tests/test_model_training.py::TestModelTraining::test_incremental_learning\nFAILED tests/test_model_training.py::TestModelTraining::test_training_monitoring\n================== 4 failed, 5 passed, 37 warnings in 4.52s ===================\n",
      "stderr": ""
    },
    "api_testing": {
      "success": false,
      "results": {
        "/health": {
          "error": "All connection attempts failed",
          "success": false
        },
        "/api/v1/status": {
          "error": "All connection attempts failed",
          "success": false
        },
        "/api/v1/workflows": {
          "error": "All connection attempts failed",
          "success": false
        },
        "/api/v1/projects": {
          "error": "All connection attempts failed",
          "success": false
        }
      }
    },
    "performance": {
      "success": false,
      "returncode": 1,
      "stdout": "============================= test session starts =============================\nplatform win32 -- Python 3.12.8, pytest-7.4.3, pluggy-1.6.0 -- C:\\Users\\Admin\\AppData\\Local\\Programs\\Python\\Python312\\python.exe\ncachedir: .pytest_cache\nrootdir: E:\\My\\vscode-memory-bank\\intelligent-n8n-system\nconfigfile: pytest.ini\nplugins: anyio-3.7.1, asyncio-0.21.1, cov-4.1.0, mock-3.15.1\nasyncio: mode=Mode.STRICT\ncollecting ... collected 8 items\n\ntests/test_performance.py::TestPerformance::test_project_analysis_performance PASSED [ 12%]\ntests/test_performance.py::TestPerformance::test_pipeline_execution_performance PASSED [ 25%]\ntests/test_performance.py::TestPerformance::test_concurrent_pipeline_executions PASSED [ 37%]\ntests/test_performance.py::TestPerformance::test_memory_usage_under_load PASSED [ 50%]\ntests/test_performance.py::TestPerformance::test_api_response_times FAILED [ 62%]\n\n================================== FAILURES ===================================\n___________________ TestPerformance.test_api_response_times ___________________\ntests\\test_performance.py:309: in test_api_response_times\n    from src.main import app\nE   ModuleNotFoundError: No module named 'src.main'\n============================== warnings summary ===============================\nC:\\Users\\Admin\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pydantic\\fields.py:1093: 36 warnings\n  C:\\Users\\Admin\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pydantic\\fields.py:1093: PydanticDeprecatedSince20: Using extra keyword arguments on `Field` is deprecated and will be removed. Use `json_schema_extra` instead. (Extra keys: 'env'). Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    warn(\n\nC:\\Users\\Admin\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pydantic\\_internal\\_config.py:323\n  C:\\Users\\Admin\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\pydantic\\_internal\\_config.py:323: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    warnings.warn(DEPRECATION_MESSAGE, DeprecationWarning)\n\ntests\\test_performance.py:16\n  E:\\My\\vscode-memory-bank\\intelligent-n8n-system\\tests\\test_performance.py:16: PytestUnknownMarkWarning: Unknown pytest.mark.performance - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.performance\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ===========================\nFAILED tests/test_performance.py::TestPerformance::test_api_response_times - ...\n!!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!!\n================== 1 failed, 4 passed, 38 warnings in 2.34s ===================\n",
      "stderr": ""
    }
  },
  "recommendations": [
    "Review integration test failures and fix core pipeline issues",
    "Verify n8n service is running and accessible",
    "Check ML dependencies and training data availability",
    "Fix API endpoint issues and ensure proper error handling",
    "Optimize performance bottlenecks identified in benchmarks"
  ]
}