# ===========================================
# KNOWLEDGE BASE INITIALIZATION SCRIPT
# ===========================================

Write-Host "üß† Initializing Knowledge Base for n8n System" -ForegroundColor Green
Write-Host "=============================================" -ForegroundColor Green

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Ü–≤–µ—Ç–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
function Write-ColorOutput {
  param (
    [string]$Message,
    [string]$Type = "Info" # Can be "Info", "Success", "Warning", "Error", "Header"
  )
  switch ($Type) {
    "Info" { Write-Host -ForegroundColor Cyan $Message }
    "Success" { Write-Host -ForegroundColor Green $Message }
    "Warning" { Write-Host -ForegroundColor Yellow $Message }
    "Error" { Write-Host -ForegroundColor Red $Message }
    "Header" { Write-Host -ForegroundColor Magenta "`n--- $Message ---`n" }
    default { Write-Host $Message }
  }
}

Write-ColorOutput "Step 1: Checking Python Environment" "Info"
try {
  $pythonVersion = python --version 2>&1
  Write-ColorOutput "‚úÖ Python found: $pythonVersion" "Success"
}
catch {
  Write-ColorOutput "‚ùå Python not found. Please install Python 3.8+" "Error"
  exit 1
}

Write-ColorOutput "Step 2: Installing Dependencies" "Info"
try {
  Set-Location "intelligent-n8n-system"
  pip install -r requirements.txt
  Write-ColorOutput "‚úÖ Dependencies installed successfully" "Success"
}
catch {
  Write-ColorOutput "‚ùå Failed to install dependencies" "Error"
  exit 1
}

Write-ColorOutput "Step 3: Initializing Knowledge Base" "Info"
try {
  python scripts/manage_knowledge.py init
  Write-ColorOutput "‚úÖ Knowledge base initialized successfully" "Success"
}
catch {
  Write-ColorOutput "‚ùå Failed to initialize knowledge base" "Error"
  exit 1
}

Write-ColorOutput "Step 4: Testing Knowledge Base" "Info"
try {
  # –¢–µ—Å—Ç –ø–æ–∏—Å–∫–∞
  Write-ColorOutput "Testing technology search..." "Info"
  python scripts/manage_knowledge.py search "Python FastAPI" --limit 5
    
  # –¢–µ—Å—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
  Write-ColorOutput "Testing technology recommendations..." "Info"
  python scripts/manage_knowledge.py recommend --technologies "Python" "PostgreSQL" --architecture "microservices"
    
  # –¢–µ—Å—Ç workflow –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π
  Write-ColorOutput "Testing workflow suggestions..." "Info"
  python scripts/manage_knowledge.py workflows "Python" "FastAPI" "PostgreSQL"
    
  Write-ColorOutput "‚úÖ Knowledge base tests completed successfully" "Success"
}
catch {
  Write-ColorOutput "‚ùå Knowledge base tests failed" "Error"
  exit 1
}

Write-ColorOutput "Step 5: Syncing with Context7" "Info"
try {
  Write-ColorOutput "Syncing with Context7 for latest technology data..." "Info"
  python scripts/manage_knowledge.py sync-context7
  
  Write-ColorOutput "‚úÖ Context7 sync completed successfully" "Success"
}
catch {
  Write-ColorOutput "‚ùå Context7 sync failed" "Error"
  # –ù–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ, —Ç–∞–∫ –∫–∞–∫ —ç—Ç–æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
}

Write-ColorOutput "Step 6: Exporting Knowledge Base" "Info"
try {
  python scripts/manage_knowledge.py export "knowledge_base_export.json"
  Write-ColorOutput "‚úÖ Knowledge base exported to knowledge_base_export.json" "Success"
}
catch {
  Write-ColorOutput "‚ùå Failed to export knowledge base" "Error"
  exit 1
}

Write-ColorOutput "Step 7: Showing Statistics" "Info"
try {
  python scripts/manage_knowledge.py stats
  Write-ColorOutput "‚úÖ Knowledge base statistics displayed" "Success"
}
catch {
  Write-ColorOutput "‚ùå Failed to show statistics" "Error"
  exit 1
}

Set-Location ".."

Write-ColorOutput "üéâ Knowledge Base Initialization Complete!" "Success"
Write-ColorOutput "=============================================" "Success"
Write-Host ""
Write-ColorOutput "üìä What was created:" "Info"
Write-ColorOutput "   ‚úÖ Technology entities (languages, frameworks, tools)" "Success"
Write-ColorOutput "   ‚úÖ Technology relationships and connections" "Success"
Write-ColorOutput "   ‚úÖ N8N integration mappings" "Success"
Write-ColorOutput "   ‚úÖ Use case categorizations" "Success"
Write-ColorOutput "   ‚úÖ Complexity assessments" "Success"
Write-Host ""
Write-ColorOutput "üöÄ How to use:" "Info"
Write-ColorOutput "   ‚Ä¢ Search technologies: python scripts/manage_knowledge.py search 'query'" "Success"
Write-ColorOutput "   ‚Ä¢ Get recommendations: python scripts/manage_knowledge.py recommend --technologies 'Python'" "Success"
Write-ColorOutput "   ‚Ä¢ Get workflows: python scripts/manage_knowledge.py workflows 'Python' 'FastAPI'" "Success"
Write-ColorOutput "   ‚Ä¢ Update popularity: python scripts/manage_knowledge.py update" "Success"
Write-ColorOutput "   ‚Ä¢ Show stats: python scripts/manage_knowledge.py stats" "Success"
Write-Host ""
Write-ColorOutput "üéØ Integration with AI Router:" "Info"
Write-ColorOutput "   The knowledge base is now integrated with AI Router for intelligent" "Success"
Write-ColorOutput "   technology recommendations and n8n workflow suggestions!" "Success"
